<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Excell</groupId>
  <artifactId>com.doc1</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Vlad</name>
<dependencies>

<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>3.17</version>
</dependency>



		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.14.0</version>
		</dependency>

		<!-- https://logging.apache.org/log4j/2.x/maven-artifacts.html -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.11.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.1</version>
		</dependency>


	</dependencies>


	<build>

		<plugins>
			<!-- https://maven.apache.org/plugins/maven-compiler-plugin/examples/set-compiler-source-and-target.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>

				</configuration>
			</plugin>

			<!-- https://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/TestSuites/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

		</plugins>

	</build>






</project>
___________________________________________________________________________________________________________________________________

package com.doc1;


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class ExcellDataProvider{
	
	private WebDriver driver;
	@BeforeMethod(alwaysRun=true)
	private void setUp() {
		System.setProperty("webdriver.chrome.driver","C:\\chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().window().maximize();
		String url=("https://opensource-demo.orangehrmlive.com/"
				+ "");
		driver.get(url);
		System.out.println(driver.getTitle());
		
		//Username
		WebElement	userName=driver.findElement(By.xpath("//input[@id='txtUsername']"));
		userName.sendKeys("Admin");
		
		//PASSWORD
		WebElement	userPassword =driver.findElement(By.xpath("//input[@id='txtPassword']"));
		userPassword.sendKeys("admin123");
		
		//LOG IN
		WebElement	button =driver.findElement(By.xpath("//input[@id='btnLogin']"));
		button.click();
		
		driver.findElement(By.xpath("//b[contains(text(),'PIM')]")).click();
		driver.findElement(By.xpath("//a[@id='menu_pim_viewEmployeeList']")).click();
		driver.findElement(By.xpath("//input[@id='btnAdd']")).click();
		
		
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
@Test(dataProvider="test1Data")
public void test1(String Firs_name, String last_name, String Middlename,String id) throws Exception {
	
	System.out.println(Firs_name+"|"+last_name+"|"+Middlename+"|"+id);
	
	
	
	
	driver.findElement(By.xpath("//input[@id='firstName']")).sendKeys(Firs_name);
	driver.findElement(By.xpath("//input[@id='middleName']")).sendKeys(last_name);
	driver.findElement(By.xpath("//input[@id='lastName']")).sendKeys(Middlename);
	driver.findElement(By.xpath("//input[@id='employeeId']")).sendKeys(id);
	driver.findElement(By.xpath("//input[@id='btnSave']")).click();
	//driver.navigate().back();
	//driver.quit();
	
	Thread.sleep(2000);
	
	
	
	
	
}	
	
	
	

	
	
	
	@DataProvider(name="test1Data")
	public  Object[][] getDta() {
		String excelPath= "C:\\Users\\Volodymyr\\eclipse-workspace\\project-2\\com.doc1\\excel\\data.xlsx";
		
	Object data[][] = testData(excelPath, "Sheet1");		
		return data;
		
	}
	
	public   Object[][] testData(String excelPath, String sheetName) {
	wx excel = new wx(excelPath,sheetName);
	
	int rowCount= excel.getRowCount();
	int colCount =excel.getColCount();
	
	Object data[][]=new Object[rowCount-1][colCount];
	
	for(int i=1; i<rowCount;i++) {
		for(int j=0; j<colCount;j++) {
			String cellData=excel.getCellDataString(i, j);
			//System.out.println(cellData+"|");
			data[i-1][j]=cellData;
		}
		System.out.println();
	}
return data;
}
}
-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
package com.doc1;


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class ExcellDataProvider{
	
	private WebDriver driver;
	@BeforeMethod(alwaysRun=true)
	private void setUp() {
		System.setProperty("webdriver.chrome.driver","C:\\chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().window().maximize();
		String url=("https://opensource-demo.orangehrmlive.com/"
				+ "");
		driver.get(url);
		System.out.println(driver.getTitle());
		
		//Username
		WebElement	userName=driver.findElement(By.xpath("//input[@id='txtUsername']"));
		userName.sendKeys("Admin");
		
		//PASSWORD
		WebElement	userPassword =driver.findElement(By.xpath("//input[@id='txtPassword']"));
		userPassword.sendKeys("admin123");
		
		//LOG IN
		WebElement	button =driver.findElement(By.xpath("//input[@id='btnLogin']"));
		button.click();
		
		driver.findElement(By.xpath("//b[contains(text(),'PIM')]")).click();
		driver.findElement(By.xpath("//a[@id='menu_pim_viewEmployeeList']")).click();
		driver.findElement(By.xpath("//input[@id='btnAdd']")).click();
		
		
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
@Test(dataProvider="test1Data")
public void test1(String Firs_name, String last_name, String Middlename,String id) throws Exception {
	
	System.out.println(Firs_name+"|"+last_name+"|"+Middlename+"|"+id);
	
	
	
	
	driver.findElement(By.xpath("//input[@id='firstName']")).sendKeys(Firs_name);
	driver.findElement(By.xpath("//input[@id='middleName']")).sendKeys(last_name);
	driver.findElement(By.xpath("//input[@id='lastName']")).sendKeys(Middlename);
	driver.findElement(By.xpath("//input[@id='employeeId']")).sendKeys(id);
	driver.findElement(By.xpath("//input[@id='btnSave']")).click();
	//driver.navigate().back();
	//driver.quit();
	
	Thread.sleep(2000);
	
	
	
	
	
}	
	
	
	

	
	
	
	@DataProvider(name="test1Data")
	public  Object[][] getDta() {
		String excelPath= "C:\\Users\\Volodymyr\\eclipse-workspace\\project-2\\com.doc1\\excel\\data.xlsx";
		
	Object data[][] = testData(excelPath, "Sheet1");		
		return data;
		
	}
	
	public   Object[][] testData(String excelPath, String sheetName) {
	wx excel = new wx(excelPath,sheetName);
	
	int rowCount= excel.getRowCount();
	int colCount =excel.getColCount();
	
	Object data[][]=new Object[rowCount-1][colCount];
	
	for(int i=1; i<rowCount;i++) {
		for(int j=0; j<colCount;j++) {
			String cellData=excel.getCellDataString(i, j);
			//System.out.println(cellData+"|");
			data[i-1][j]=cellData;
		}
		System.out.println();
	}
return data;
}
}
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
package com.doc1;

public class ExcelUtilsDemo {
	
	public static void main(String[] args) {
		
		String projectpath =System.getProperty("user.dir");
		
		wx excel = new wx(projectpath+"/excel/data.xlsx", "Sheet1"); 
		excel.getRowCount();
		excel.getCellDataString(0, 0);
		excel.getCellDataNumber(1, 3);
		excel.getColCount();
	}

}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
package com.doc1;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class wx {
	static String projectpath;
	static XSSFWorkbook workbook;
	static XSSFSheet sheet;
	
	
	
	public wx(String excelPath, String sheetName) {
		try {
		 projectpath =System.getProperty("user.dir");
		 workbook =new XSSFWorkbook(excelPath);
		 sheet =workbook.getSheet(sheetName);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[]args) {
		
		//getRowCount();
		getCellDataString(0,0);
		getCellDataNumber(1,3);
	 
	}
	
	
	public static int getColCount() {
		int colCount =0;

		try{
	
colCount = sheet.getRow(0).getPhysicalNumberOfCells();
System.out.println("Number of col: "+colCount);

		} catch(Exception exp) {
			
			System.out.println(exp.getMessage());
			System.out.println(exp.getCause());
			exp.printStackTrace();
		}
		return colCount;
	}
	
	
	public static int getRowCount() {
		
int rowCount=0;
		try{
	
rowCount = sheet.getPhysicalNumberOfRows();
 System.out.println("Number of rows: "+rowCount);

		} catch(Exception exp) {
			
			System.out.println(exp.getMessage());
			System.out.println(exp.getCause());
			exp.printStackTrace();
		}
		return rowCount;
	}
	
	
	
	
	
	public static String getCellDataString(int rowNaum, int colNum) {
		String cellData=null;
		try{
		
		 
		cellData= sheet.getRow(rowNaum).getCell(colNum).getStringCellValue();
		 
		 //System.out.println(cellData);
		 
} catch(Exception exp) {
			
			System.out.println(exp.getMessage());
			System.out.println(exp.getCause());
			exp.printStackTrace();
		}
		return cellData;
		
	}
	
	public static void getCellDataNumber(int rowNaum, int colNum) {
		try{
		
		 double cellData= sheet.getRow(rowNaum).getCell(colNum).getNumericCellValue();
		 
		// System.out.println(cellData);
		 
} catch(Exception exp) {
			
			System.out.println(exp.getMessage());
			System.out.println(exp.getCause());
			exp.printStackTrace();
		}
		
	}
}